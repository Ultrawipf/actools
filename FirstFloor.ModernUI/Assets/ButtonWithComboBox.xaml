<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:FirstFloor.ModernUI.Windows.Controls">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Button.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/MenuItem.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="ButtonWithComboBoxExtraMenu" TargetType="{x:Type MenuItem}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="True" />
    <Setter Property="IsTabStop" Value="True" />

    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{DynamicResource ButtonText}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Visibility" Value="Visible" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border x:Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch">
            <c:Cell VerticalAlignment="Stretch">
              <Path x:Name="Arrow" Fill="{TemplateBinding Foreground}" VerticalAlignment="Bottom" Margin="3 3 2 3" Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" />
              <ContentPresenter />
              <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom"
                  PlacementTarget="{Binding ElementName=Chrome}" x:Name="SubMenuPopup" Focusable="False"
                  PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuAnimationKey}}">
                <Border x:Name="SubMenuBorder" BorderBrush="{DynamicResource WindowBorderActive}" Background="{DynamicResource WindowBackground}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" BorderThickness="1" Padding="0"
                    TextBlock.Foreground="{DynamicResource WindowText}">
                  <c:Cell x:Name="SubMenu">
                    <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Continue" />
                  </c:Cell>
                </Border>
              </Popup>
            </c:Cell>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
              <Setter Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
              <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />
              <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
              <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />
              <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter TargetName="Chrome" Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ButtonWithComboBoxWrapperMenu" TargetType="{x:Type Menu}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="FocusManager.IsFocusScope" Value="False" />

    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />

    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />

    <Setter Property="Background" Value="Transparent" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Grid ClipToBounds="True" IsItemsHost="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type c:ButtonWithComboBox}" BasedOn="{StaticResource BaseButtonStyle.Control}">
    <Setter Property="Focusable" Value="True" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type c:ButtonWithComboBox}">
          <Border x:Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <DockPanel KeyboardNavigation.TabNavigation="Local">
              <c:Cell DockPanel.Dock="Right">
                <Menu VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource ButtonWithComboBoxWrapperMenu}"
                    Foreground="{TemplateBinding Foreground}">
                  <c:LazyMenuItem x:Name="PART_MenuItem" Style="{StaticResource ButtonWithComboBoxExtraMenu}" Background="{TemplateBinding Background}"
                      ItemsSource="{TemplateBinding MenuItems}" BorderBrush="Transparent" KeyboardNavigation.TabIndex="1" Focusable="{TemplateBinding Focusable}" />
                </Menu>
                <Border Background="{Binding BorderBrush, ElementName=PART_MenuItem}" Width="1" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0 -1 -1 -1" />
                <Border Background="{Binding BorderBrush, ElementName=PART_MenuItem}" Height="1" VerticalAlignment="Top" IsHitTestVisible="False" Margin="0 -1 -1 -1" />
                <Border Background="{Binding BorderBrush, ElementName=PART_MenuItem}" Height="1" VerticalAlignment="Bottom" IsHitTestVisible="False" Margin="0 -1 -1 -1" />
              </c:Cell>
              <c:Cell>
                <Button x:Name="Presenter" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Focusable="{TemplateBinding Focusable}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ToolTip="{TemplateBinding ButtonToolTip}" Command="{TemplateBinding Command}"
                    CommandParameter="{TemplateBinding CommandParameter}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"
                    BorderThickness="0" Style="{StaticResource BaseButtonStyle.Nothing}" Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}" BorderBrush="Transparent" KeyboardNavigation.TabIndex="0" />
                <Border Background="{Binding BorderBrush, ElementName=Presenter}" Width="1" HorizontalAlignment="Left" IsHitTestVisible="False" Margin="-1 -1 0 -1" />
                <Border Background="{Binding BorderBrush, ElementName=Presenter}" Height="1" VerticalAlignment="Top" IsHitTestVisible="False" Margin="-1 -1 0 -1" />
                <Border Background="{Binding BorderBrush, ElementName=Presenter}" Height="1" VerticalAlignment="Bottom" IsHitTestVisible="False" Margin="-1 -1 0 -1" />
              </c:Cell>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="Presenter">
              <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" TargetName="Presenter" />
              <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" TargetName="Presenter" />
              <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" TargetName="Presenter" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True" SourceName="Presenter">
              <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" TargetName="Presenter" />
              <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" TargetName="Presenter" />
              <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" TargetName="Presenter" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="PART_MenuItem">
              <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" TargetName="PART_MenuItem" />
              <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" TargetName="PART_MenuItem" />
              <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" TargetName="PART_MenuItem" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True" SourceName="PART_MenuItem">
              <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" TargetName="PART_MenuItem" />
              <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" TargetName="PART_MenuItem" />
              <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" TargetName="PART_MenuItem" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True" SourceName="PART_MenuItem">
              <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" TargetName="PART_MenuItem" />
              <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" TargetName="PART_MenuItem" />
              <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" TargetName="PART_MenuItem" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True" SourceName="Presenter">
              <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" TargetName="Presenter" />
              <!--<Setter TargetName="Chrome" Property="BorderBrush" Value="{DynamicResource FocusBorder}" />-->
            </Trigger>
            <Trigger Property="IsFocused" Value="True" SourceName="PART_MenuItem">
              <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" TargetName="PART_MenuItem" />
              <!--<Setter TargetName="Chrome" Property="BorderBrush" Value="{DynamicResource FocusBorder}" />-->
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="Go.ButtonWithComboBox" TargetType="{x:Type c:ButtonWithComboBox}" BasedOn="{StaticResource {x:Type c:ButtonWithComboBox}}">
    <Setter Property="Background" Value="{DynamicResource GoButtonBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource GoButtonBorder}" />
    <Setter Property="Foreground" Value="{DynamicResource GoButtonText}" />
    <Setter Property="FontWeight" Value="Bold" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type c:ButtonWithComboBox}">
          <Border x:Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
            <DockPanel KeyboardNavigation.TabNavigation="Local">
              <c:Cell DockPanel.Dock="Right" TextBlock.FontWeight="Normal">
                <Menu VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource ButtonWithComboBoxWrapperMenu}"
                    Foreground="{TemplateBinding Foreground}">
                  <c:LazyMenuItem x:Name="PART_MenuItem" Style="{StaticResource ButtonWithComboBoxExtraMenu}" Background="{TemplateBinding Background}"
                      ItemsSource="{TemplateBinding MenuItems}" BorderBrush="Transparent" KeyboardNavigation.TabIndex="1" Focusable="{TemplateBinding Focusable}" />
                </Menu>
                <Border Background="{Binding BorderBrush, ElementName=PART_MenuItem}" Width="1" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0 -1 -1 -1" />
                <Border Background="{Binding BorderBrush, ElementName=PART_MenuItem}" Height="1" VerticalAlignment="Top" IsHitTestVisible="False" Margin="0 -1 -1 -1" />
                <Border Background="{Binding BorderBrush, ElementName=PART_MenuItem}" Height="1" VerticalAlignment="Bottom" IsHitTestVisible="False" Margin="0 -1 -1 -1" />
              </c:Cell>
              <c:Cell>
                <Button x:Name="Presenter" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Focusable="{TemplateBinding Focusable}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ToolTip="{TemplateBinding ButtonToolTip}" Command="{TemplateBinding Command}"
                    CommandParameter="{TemplateBinding CommandParameter}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"
                    BorderThickness="0" Style="{StaticResource BaseButtonStyle.Nothing}" Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}" BorderBrush="Transparent" KeyboardNavigation.TabIndex="0" />
                <Border Background="{Binding BorderBrush, ElementName=Presenter}" Width="1" HorizontalAlignment="Left" IsHitTestVisible="False" Margin="-1 -1 0 -1" />
                <Border Background="{Binding BorderBrush, ElementName=Presenter}" Height="1" VerticalAlignment="Top" IsHitTestVisible="False" Margin="-1 -1 0 -1" />
                <Border Background="{Binding BorderBrush, ElementName=Presenter}" Height="1" VerticalAlignment="Bottom" IsHitTestVisible="False" Margin="-1 -1 0 -1" />
              </c:Cell>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource GoButtonTextDisabled}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="Presenter">
              <Setter Property="Background" Value="{DynamicResource GoButtonBackgroundHover}" TargetName="Presenter" />
              <Setter Property="BorderBrush" Value="{DynamicResource GoButtonBorderHover}" TargetName="Presenter" />
              <Setter Property="Foreground" Value="{DynamicResource GoButtonTextHover}" TargetName="Presenter" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True" SourceName="Presenter">
              <Setter Property="Background" Value="{DynamicResource GoButtonBackgroundPressed}" TargetName="Presenter" />
              <Setter Property="BorderBrush" Value="{DynamicResource GoButtonBorderPressed}" TargetName="Presenter" />
              <Setter Property="Foreground" Value="{DynamicResource GoButtonTextPressed}" TargetName="Presenter" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True" SourceName="PART_MenuItem">
              <Setter Property="Background" Value="{DynamicResource GoButtonBackgroundHover}" TargetName="PART_MenuItem" />
              <Setter Property="BorderBrush" Value="{DynamicResource GoButtonBorderHover}" TargetName="PART_MenuItem" />
              <Setter Property="Foreground" Value="{DynamicResource GoButtonTextHover}" TargetName="PART_MenuItem" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True" SourceName="PART_MenuItem">
              <Setter Property="Background" Value="{DynamicResource GoButtonBackgroundPressed}" TargetName="PART_MenuItem" />
              <Setter Property="BorderBrush" Value="{DynamicResource GoButtonBorderPressed}" TargetName="PART_MenuItem" />
              <Setter Property="Foreground" Value="{DynamicResource GoButtonTextPressed}" TargetName="PART_MenuItem" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True" SourceName="PART_MenuItem">
              <Setter Property="Background" Value="{DynamicResource GoButtonBackgroundPressed}" TargetName="PART_MenuItem" />
              <Setter Property="BorderBrush" Value="{DynamicResource GoButtonBorderPressed}" TargetName="PART_MenuItem" />
              <Setter Property="Foreground" Value="{DynamicResource GoButtonTextPressed}" TargetName="PART_MenuItem" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True" SourceName="Presenter">
              <Setter Property="BorderBrush" Value="{DynamicResource Go}" TargetName="Presenter" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True" SourceName="PART_MenuItem">
              <Setter Property="BorderBrush" Value="{DynamicResource Go}" TargetName="PART_MenuItem" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ToolBarButtonWithComboBox" BasedOn="{StaticResource {x:Type c:ButtonWithComboBox}}" TargetType="{x:Type c:ButtonWithComboBox}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Padding" Value="8 3 8 5" />
  </Style>

  <Style x:Key="Go.ToolBarButtonWithComboBox" BasedOn="{StaticResource Go.ButtonWithComboBox}" TargetType="{x:Type c:ButtonWithComboBox}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Padding" Value="8 3 8 5" />
  </Style>
</ResourceDictionary>