<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:FirstFloor.ModernUI.Windows.Controls" xmlns:a="clr-namespace:FirstFloor.ModernUI.Windows.Attached">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBox.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Slider.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style TargetType="c:BbCodeBlock">
    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    <Setter Property="TextWrapping" Value="Wrap" />
  </Style>

  <Style TargetType="c:SelectableBbCodeBlock">
    <Setter Property="ContextMenu" Value="{StaticResource TextBoxReadOnlyContextMenu}" />
    <Setter Property="CaretBrush" Value="{DynamicResource InputText}" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="SelectionBrush" Value="{DynamicResource Accent}" />
    <Setter Property="IsReadOnly" Value="True" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="c:LabeledToggleButton">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Background" Value="{DynamicResource SliderTrackBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SliderTrackBorder}" />
    <Setter Property="Foreground" Value="{DynamicResource ButtonText}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="16 1 16 2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type c:LabeledToggleButton}">
          <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
              Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <c:Cell ClipToBounds="True">
              <Border x:Name="PART_Helper" Margin="0 0 11 0" />
              <Border x:Name="PART_OnLabel" Padding="{TemplateBinding Padding}" a:RelativeTranslateTransform.RelativeTo="{Binding ElementName=PART_Helper}"
                  a:RelativeTranslateTransform.X="-1">
                <TextBlock Text="{TemplateBinding LabelChecked}" Margin="0 0 11 0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Border>
              <Border x:Name="PART_OffLabel" Margin="{TemplateBinding Padding}" a:RelativeTranslateTransform.RelativeTo="{Binding ElementName=PART_Helper}"
                  a:RelativeTranslateTransform.X="0">
                <TextBlock Text="{TemplateBinding LabelUnchecked}" Margin="11 0 0 0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Border>
              <Thumb x:Name="PART_Thumb" Style="{StaticResource BaseSliderThumbStyle}" Width="11" HorizontalAlignment="Left"
                  a:RelativeTranslateTransform.RelativeTo="{Binding ElementName=PART_Helper}" a:RelativeTranslateTransform.X="0" Margin="0" />
            </c:Cell>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="HighlightChecked" Value="True">
              <Setter TargetName="PART_OnLabel" Property="Background" Value="{DynamicResource Accent}" />
              <Setter TargetName="PART_OnLabel" Property="TextBlock.Foreground" Value="{DynamicResource ButtonTextPressed}" />
            </Trigger>
            <Trigger Property="HighlightUnchecked" Value="True">
              <Setter TargetName="PART_OffLabel" Property="Background" Value="{DynamicResource Accent}" />
              <Setter TargetName="PART_OffLabel" Property="TextBlock.Foreground" Value="{DynamicResource ButtonTextPressed}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>